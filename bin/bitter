#!/bin/sh

VERSION=0.3.7

get_script_dir () {
  bin_dir=$(dirname $0)
  link_dir="$(dirname $(test -L "$0" && readlink "$0" || echo "$0"))"
  if [ "$bin_dir" = "$link_dir" ]; then
    script_dir="$bin_dir"
  elif expr "$link_dir" : "/*" > /dev/null; then
    script_dir="$link_dir"
  else
    script_dir="$(cd $bin_dir/$link_dir; pwd -P)"
  fi
  echo "$script_dir"
}

configure_notes_git () {
  git config core.bare false
  git config core.worktree ../notes
  git config receive.denycurrentbranch ignore

  # Arrange hook for post-receive event
  if [ ! -e hooks/post-receive ]; then
    echo "#!/bin/sh" > hooks/post-receive
  fi
  if ! grep --quiet "# Bitter" hooks/post-receive; then
    cat >> hooks/post-receive <<EOF

# Bitter
git checkout -f
EOF
  fi
  chmod +x hooks/post-receive

  # Arrange hook for post-checkout event
  if [ ! -e hooks/post-checkout ]; then
    echo "#!/bin/sh" > hooks/post-checkout
  fi
  if ! grep --quiet "# Bitter" hooks/post-checkout; then
    cat >> hooks/post-checkout <<EOF

# Bitter
touch ../notes/reindex-needed
EOF
  fi
  chmod +x hooks/post-checkout
}

setup () {
  if [ -e notes.git/HEAD ]; then
    echo "notes.git exists.\nIt appears you already have set up."
    exit 1
  fi

  script_dir=$( get_script_dir )

  echo "setting up..."

  mkdir notes notes.git

  # Prepare notes.git
  cd notes.git
  git --bare init
  configure_notes_git

  # Copy default files
  cd ..  # basedir
  cp -R $script_dir/../default/. notes/

  # Commit them
  cd notes.git
  git add .
  git commit -m "Setup"

  echo "\nsetup completed"
}

server () {
  if [ ! -e notes/config/config.json ]; then
    echo "Can't find notes/config/config.json"
    echo "Execute this command from the directory that contains notes."
    echo "If you have not set up yet, do \"bitter setup\" first."
    exit 1
  fi

  script_dir=$( get_script_dir )
  node $script_dir/../server.js
}

gitconfig () {
  if [ ! -e HEAD ]; then
    echo "Execute this command in bare .git directory"
    exit 1
  fi

  if [ -e ../notes ]; then
    while true; do
      read -p "../notes exists, do you want to delete it? [y/N]" yn
      case $yn in
        [Yy]* ) break;;
        [Nn]* ) echo "canceled."; exit 1;;
        "" ) echo "canceled."; exit 1;;
        * )  echo "Please answer yes or no.";;
      esac
    done
    rm -rf ../notes
  fi
  mkdir ../notes
  echo "created ../notes for worktree"
  configure_notes_git
  git checkout -f
  echo "successfully configured"
}

help () {
  cat <<EOF
usage: bitter <command>
Bitter version $VERSION

Commands are:
   setup      Set up new repository
   server     Start server
   gitconfig  Configure existing bare .git
   version    Show Bitter version
EOF
}

if [ "$1" = "setup" ]; then
  setup
elif [ "$1" = "server" ]; then
  server
elif [ "$1" = "gitconfig" ]; then
  gitconfig
elif [ "$1" = "version" ] || [ "$1" = "--version" ] || [ "$1" = "-v" ]; then
  echo "$VERSION"
elif [ "$1" = "help" ] || [ "$1" = "--help" ]; then
  help
else
  help
  exit 1
fi
